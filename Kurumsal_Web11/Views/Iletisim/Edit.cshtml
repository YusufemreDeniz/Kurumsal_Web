@model Kurumsal_Web11.Models.Model.Iletisim

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style type="text/css">
    .contact-form {
        max-width: 600px;
        margin: 20px auto;
        background-color: #f9f9f9;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        flex-direction: column;
    }

    .form-label {
        margin-bottom: 8px;
        font-weight: 600;
        color: #495057;
    }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ced4da;
        border-radius: 5px;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: #007bff;
        outline: none;
        box-shadow: 0 0 0 3px rgba(0,123,255,0.1);
    }

    .validation-error {
        color: #dc3545;
        font-size: 0.9em;
        margin-top: 5px;
    }

    .form-actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 20px;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
        border: none;
    }

    .btn-primary:hover {
        background-color: #0056b3;
    }

    .btn-secondary {
        background-color: #6c757d;
        color: white;
        text-decoration: none;
        border: none;
    }

    .btn-secondary:hover {
        background-color: #545b62;
    }

    @@media (max-width: 768px) {
    .contact-form {
        width: 95%;
        padding: 15px;
    }
}

</style>
<main>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="contact-form">
            <h4 class="text-center mb-4">İletişim Bilgileri Formu</h4>

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger", style = "display:none;" })
            @Html.HiddenFor(model => model.IletisimId)

            <div class="form-group">
                @Html.LabelFor(model => model.Adres, new { @class = "form-label" })
                @Html.EditorFor(model => model.Adres, new { htmlAttributes = new { @class = "form-control", placeholder = "Adres bilgisi" } })
                @Html.ValidationMessageFor(model => model.Adres, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Telefon, new { @class = "form-label" })
                @Html.EditorFor(model => model.Telefon, new { htmlAttributes = new { @class = "form-control", placeholder = "Telefon numarası", type = "tel" } })
                @Html.ValidationMessageFor(model => model.Telefon, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fax, new { @class = "form-label" })
                @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control", placeholder = "Fax numarası" } })
                @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Whatsapp, new { @class = "form-label" })
                @Html.EditorFor(model => model.Whatsapp, new { htmlAttributes = new { @class = "form-control", placeholder = "Whatsapp numarası", type = "tel" } })
                @Html.ValidationMessageFor(model => model.Whatsapp, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Facebook, new { @class = "form-label" })
                @Html.EditorFor(model => model.Facebook, new { htmlAttributes = new { @class = "form-control", placeholder = "Facebook profil linki", type = "url" } })
                @Html.ValidationMessageFor(model => model.Facebook, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Twitter, new { @class = "form-label" })
                @Html.EditorFor(model => model.Twitter, new { htmlAttributes = new { @class = "form-control", placeholder = "Twitter profil linki", type = "url" } })
                @Html.ValidationMessageFor(model => model.Twitter, "", new { @class = "validation-error" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Instagram, new { @class = "form-label" })
                @Html.EditorFor(model => model.Instagram, new { htmlAttributes = new { @class = "form-control", placeholder = "Instagram profil linki", type = "url" } })
                @Html.ValidationMessageFor(model => model.Instagram, "", new { @class = "validation-error" })
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Kaydet
                </button>
                @Html.ActionLink("Geri Dön", "Index", null, new { @class = "btn btn-secondary" })
            </div>
        </div>
    }
</main>

<script>
    // Optional: Client-side validation
    $(document).ready(function () {
        $('form').validate({
            rules: {
                Telefon: {
                    required: true,
                    minlength: 10
                },
                Adres: {
                    required: true,
                    minlength: 10
                }
            },
            messages: {
                Telefon: {
                    required: "Telefon numarası zorunludur",
                    minlength: "Geçerli bir telefon numarası girin"
                },
                Adres: {
                    required: "Adres bilgisi zorunludur",
                    minlength: "Adres çok kısa"
                }
            }
        });
    });
</script>